defmodule Mix.Tasks.Gen.Md do
  @moduledoc "Geeenrates Markdown from properties"

  use Mix.Task

  @impl Mix.Task
  def run(_args) do
    IO.puts("Beginning file write")

    json_filename = File.cwd!() <> ~s(/gen/properties.json)
    {:ok, json} = File.read(json_filename)
    properties = json |> Jason.decode!() |> Enum.filter(& &1["address"] !== "")

    filename = File.cwd!() <> ~s(/gen/properties.md)
    File.exists?(filename) && File.rm(filename)
    {:ok, file} = File.open(filename, [:append])

    IO.binwrite(file, """
    # Properties
    This file is generated from the properties.json file. It is generated by running `mix gen.md`
    ## Overview

      <table>
      <thead>
      <tr>
        <th>Name</th>
        <th>Price</th>
        <th>Available</th>
        <th>Link</th>
        <th>Agency</th>
      </tr>
      </thead>

      <tbody>
        #{render_properties_row(properties)}
      </tbody>
      </table>

      ---
    """)

    properties
    |> Enum.each(fn property ->
      IO.binwrite(file, """
        ## #{property["address"]} #{property["title"]}

        <img src="#{property["floorplan_img"]}" alt="">

        #{property["description"]}
      """)
    end)

    IO.puts("Finished file write, wrote to #{filename}")
  end

  def render_properties_row(properties) do
    properties
    |> Enum.map(fn property ->
      price = property["price"] |> String.replace(~r/\D/, "") |> String.trim()

      slug =
        ~s/#{property["address"]} #{property["title"]}/
        |> String.replace(~r/\s/, "-")
        |> String.replace(",", "")
        |> String.downcase()

      """
      <tr>
        <td><a href="##{slug}">#{property["address"]}</a></td>
        <td>#{price}</td>
        <td>#{property["available"]}</td>
        <td><a href="#{property["link"]}">Link</a></td>
        <td>#{property["agency"]}</td>
      </tr>
      """
    end)
    |> Enum.join("\n")
  end
end
